 ; git menu for e_menu.tcl

[OPTIONS]
in=1.0
o=0
pos=45.90
w=35
::EMENUTMPFILE=%mn.tmp~
%C if {![info exist ::EMENUCOMMIT]} {set ::EMENUCOMMIT ""}
%C if {![info exist ::EMENUFILE]} {set ::EMENUFILE "%f"}
%C if {![info exist ::EMENUGREP]} {set ::EMENUGREP ""}
%C if {{%F}=={*} && ![info exist ::EMENUFILE]} {set ::EMENUFILE "*"}
%C set ::FILETAIL \"[file tail {$::EMENUFILE}]\"

[MENU]
 R:git status R: cd %PD
 S:git status S:pwd\necho %PD\ngit status

 R:git gui R: cd %PD
 R:git gui R: git gui

 R:gitk R: cd %PD
 R:gitk R: gitk

 R:  R: 2

 R:git difftool $::FILETAIL ? R: cd %PD
RW:git difftool $::FILETAIL ? RW: git log --format=oneline -10 > $::EMENUTMPFILE
 R:git difftool $::FILETAIL ? R: %I {} "DIFFTOOL" { \
   v_ {{} {-pady 4} {}} {} \
   fil1 {{   File:} {} {-w 70}} {"$::EMENUFILE"} \
   fco1 {{Version:} {} {-h 10 -state readonly -retpos 0:10 -inpval "$::EMENUCOMMIT"}} \
     {@@-pos 0 -len 10 $::EMENUTMPFILE@@    INFO: @@-div1 { } $::EMENUTMPFILE@@} \
   seh {{} {-pady 3} {}} {} \
   texc {{   Hint:} {} {-h 9 -w 70 -ro 1 -wrap word}} \
   {\n Select a version from the combobox to be compared to HEAD.\n\n If it's blank, the current file is compared to HEAD.\n\n No response means no differences.\n\n (temp file: $::EMENUTMPFILE)} \
   } -head {\n This will compare a selected version of\n     %f\n to its HEAD.} -weight bold == ::EMENUFILE ::EMENUCOMMIT
 R:git difftool $::FILETAIL ? R: git difftool $::EMENUCOMMIT HEAD -- "$::EMENUFILE"

 S:git diff S: cd %PD
RW:git diff RW: git log --format=oneline -10 > $::EMENUTMPFILE
 R:git diff R: %I {} "DIFF" { \
   v_ {{} {-pady 4} {}} {} \
   fco1 {{     Version :} {} {-h 10 -state readonly -retpos 0:10 -inpval "$::EMENUCOMMIT"}} \
     {@@-pos 0 -len 10 -list {""} $::EMENUTMPFILE@@    INFO: @@-div1 { } $::EMENUTMPFILE@@} \
   ent1 {{Regexp filter:} {} {}} {"$::EMENUGREP"} \
   seh {{} {-pady 3} {}} {} \
   texc {{        Hint :} {} {-h 9 -w 60 -ro 1 -wrap word}} \
   { Select a version from the combobox to be compared to HEAD.\
\n\n If it's blank, the current files are compared to HEAD.\
\n\n When 'regexp filter' set, an additional console shows\
\n the filtered lines.\
\n\n temp file:\n $::EMENUTMPFILE} \
   } -head {\n This will compare a selected version of \
     \n     %PD\n to its HEAD.} -weight bold == ::EMENUCOMMIT ::EMENUGREP
 S:git diff S: %C set ::EMENUTMP {git diff $::EMENUCOMMIT HEAD}
 R:git diff R: %IF {$::EMENUGREP} eq "" %THEN %T $::EMENUTMP
RW:git diff RW: $::EMENUTMP | grep -n "$::EMENUGREP" > "$::EMENUTMPFILE"
SW:git diff SW: cat "$::EMENUTMPFILE"
 R:git diff R: %C file delete "$::EMENUTMPFILE"
 S:git diff S: $::EMENUTMP

 S:git add $::FILETAIL ? S: cd %PD
 R:git add $::FILETAIL ? R: %I {} "ADD" { \
   fil1 {{   File:} {} {-w 70}} {"$::EMENUFILE"} \
   } -head {\n This will add changes in a file\n to a local repository:} -weight bold == ::EMENUFILE
 S:git add $::FILETAIL ? S: git add "$::EMENUFILE"

 S:git add * S: cd %PD
 R:git add * R: %q "Adding changes" " Add all changes in\n\n  %PD\n\n to a local repository ?"
 S:git add * S: git add *\ngit status

 S:git rm $::FILETAIL ? S: cd %PD
 R:git rm $::FILETAIL ? R:  %I {} "REMOVE" { \
   fil1 {{   File:} {} {-w 70}} {"$::EMENUFILE"} \
   } -head {\n This will remove a file\n from a local repository:} -weight bold == ::EMENUFILE
 S:git rm $::FILETAIL ? S: git rm --cached "$::EMENUFILE"\ngit status

 R:  R: 2

 S:git commit S: cd %PD
 R:git commit R: %q "Committing changes" " Commit with message to be edited ?"
 S:git commit S: git commit

 S:git commit -am "%s on %t2" S: cd %PD
 R:git commit -am "%s on %t2" R: %q "Committing changes" " Add and commit with message\n\n '%s at %t2' ?"
 S:git commit -am "%s on %t2" S: git commit -am "%s on %t2"

 S:git commit --amend -am S: cd %PD
 S:git commit --amend -am S: %C if {![info exist ::EMENUCOMMIT3]} {set ::EMENUCOMMIT3 "%s %t1 #%i1"}
 R:git commit --amend -am R: %I {} "COMMIT AMEND" { \
   v_ {{} {-pady 4} {}} {} \
   texc {{Comment:} {} {-h 9 -w 70 -wrap word}} {$::EMENUCOMMIT3} \
   } -head {\n Enter the commenting text for the commit.} -weight bold == ::EMENUCOMMIT3
 R:git commit --amend -am R: %C if {"$::EMENUCOMMIT3" eq ""} exit
 S:git commit --amend -am S: git commit --amend -am "$::EMENUCOMMIT3"

 S:git commit -a S: cd %PD
 R:git commit -a R: %q "Add All and Commit Changes" " Add all changes\n and commit with message to be edited ?"
 S:git commit -a S: git commit -a

 R:  R: 2

 S:git log "1 hour ago" S: cd %PD
 S:git log "1 hour ago" S: git log --since="1 hour ago"

 S:git log "1 day ago" S: cd %PD
 S:git log "1 day ago" S: git log --since="1 day ago"

 S:git log -p "1 hour ago" S: cd %PD
 S:git log -p "1 hour ago" S: git log -p --since="1 hour ago"

 S:git log -p "1 day ago" S: cd %PD
 S:git log -p "1 day ago" S: git log -p --since="1 day ago"

 S:git log S: cd %PD
 S:git log S: git log

 S:git log --merges S: cd %PD
 S:git log --merges S: git log --merges

 R:  R: 2

 S:git branch S: cd %PD
 S:git branch S: git branch

 S:git branch "%s" S: cd %PD
 R:git branch "%s" R: %q "Branch" " Create new branch\n\n '%s' ?"
 S:git branch "%s" S: git branch -f "%s"

 S:git checkout "%s" S: cd %PD
 R:git checkout "%s" R: %q "Checkout" " Checkout to\n\n '%s' ?"
 S:git checkout "%s" S: git checkout "%s"

 R:  R: 2

 R:terminal here R: cd %d
 R:terminal here R: %TT

 R:  R: 2

 M: Next M: m=git2.mnu
